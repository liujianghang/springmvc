<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 注意创建包的时候要用斜杠 -->
<!-- namespace:名称空间 -->
<mapper namespace="org.example.mapper.BrandMapper">
    <!-- 数据库表的字段名称和实体类的属性名称不一样 不能自动封装数据
     * 起别名，同时使用sql片段
     * resultMap: 完成映射 id：唯一标识 type 映射的类型
        id：完成主键字段的映射 result：完成一般字段的映射
    -->
    <resultMap id="brandResultMap" type="org.example.pojo.Brand">
        <result column="brand_name" property="brandName"></result>
        <result column="company_name" property="companyName"></result>
    </resultMap>


    <select id="selectALl" resultMap="brandResultMap">
        select *
        from tb_brand;
    </select>


    <!--    <sql id="brand_column">-->
    <!--        id, brand_name as brandName, company_name as companyName, ordered, description, status-->
    <!--    </sql>-->
    <!--    <select id="selectALl" resultType="org.example.pojo.Brand">-->
    <!--        select <include refid="brand_column"></include>-->
    <!--        from tb_brand;-->
    <!--    </select>-->
    <!-- 参数占位符 ：1.#{}:将会替换成?
                    2.${}:拼sql,会存在sql注入问题
                    3.参数传递的使用用 #{}
                      表名或者列名不固定的时候用${}
                    4.特殊类型:parameterType：可以省略
                    5.特殊字符处理
                        1. 转义字符 &lt;
                        2. CDATA区
                      -->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id = #{id};
    </select>

    <!--
       动态条件查询
       * if 条件判断
         * test 逻辑表达式
       * 问题 and如果没有第一个条件的时候 是多余的
         * 恒等式
         * <where> 替换 where 关键字 可以兜底一些参数缺失的情况
     -->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="companyName!=null and companyName!='' ">
                and company_name like #{companyName}
            </if>
            <if test="brandName!=null and brandName!='' ">
                and brand_name like #{brandName}
            </if>
        </where>
    </select>
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
            <choose><!-- 相当于switch-->
                <when test="status!=null"> <!-- 相当于case -->
                    status = #{status}
                </when>
                <when test="companyName!=null and companyName!='' "> <!-- 相当于case -->
                    company_name like #{companyName}
                </when>
                <when test="brandName!=null and brandName!='' "> <!-- 相当于case -->
                    brand_name like #{brandName}
                </when>
            </choose>
        </where>
    </select>

    <!-- 设置返回主键，并返绑定到对象的id上 -->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name, company_name, ordered, description, status)
        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status})
    </insert>

    <update id="updata">
        update tb_brand
        <set>
            <if test="companyName!=null and companyName!=''">
                company_name = #{companyName},
            </if>
            <if test="brandName!=null and brandName!=''">
                brand_name = #{brandName},
            </if>
            <if test="description!=null and description!=''">
                description = #{description},
            </if>
            <if test="status!=null ">
                status = #{status},
            </if>
            <if test="ordered!=null ">
                ordered = #{ordered},
            </if>
        </set>
        where id = #{id};
    </update>
    <!-- 删除单个 -->
    <delete id="deleteById">
        delete from tb_brand where id = #{id}
    </delete>
    <!-- 删除数组 mybatis会将数组参数，封装为一个Map集合
        * 默认：key:array = value:数组
        * 使用@Param注解改变map集合的默认key的名称(在接口中改)
     -->
    <delete id="deleteByIds">
        delete from tb_brand where id
        in
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
        ;
    </delete>
</mapper>